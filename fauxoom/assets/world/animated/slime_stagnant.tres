[gd_resource type="VisualShader" load_steps=23 format=2]

[ext_resource path="res://assets/world/raw/fwater1.png" type="Texture" id=1]

[sub_resource type="OpenSimplexNoise" id=1]

[sub_resource type="NoiseTexture" id=2]
seamless = true
noise = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
output_port_for_preview = 0
texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeVectorInterp" id=4]

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=8]

[sub_resource type="VisualShaderNodeVectorDecompose" id=9]

[sub_resource type="VisualShaderNodeColorOp" id=10]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 6

[sub_resource type="VisualShaderNodeVectorCompose" id=11]

[sub_resource type="OpenSimplexNoise" id=12]
seed = -749732762

[sub_resource type="NoiseTexture" id=13]
noise = SubResource( 12 )

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = SubResource( 13 )

[sub_resource type="VisualShaderNodeTexture" id=15]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=16]
default_input_values = [ 0, 0.0, 1, 0.15 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=18]

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=20]

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 3

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_19;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Input:7
	float n_out7p0 = TIME;

// ScalarOp:20
	float n_in20p1 = 0.15000;
	float n_out20p0 = n_out7p0 * n_in20p1;

// VectorCompose:8
	float n_in8p0 = 0.00000;
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_in8p0, n_out20p0, n_in8p2);

// VectorOp:5
	vec3 n_out5p0 = n_out3p0 + n_out8p0;

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, n_out5p0.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:19
	vec4 tex_frg_19_read = texture(tex_frg_19, UV.xy);
	vec3 n_out19p0 = tex_frg_19_read.rgb;
	float n_out19p1 = tex_frg_19_read.a;

// VectorMix:11
	vec3 n_in11p2 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out11p0 = mix(n_out10p0, n_out19p0, n_in11p2);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out11p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ColorOp:17
	vec3 n_in17p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out17p0 = vec3(1.0) - (vec3(1.0) - n_out2p0) / (n_in17p1);

// VectorDecompose:16
	float n_out16p0 = n_out17p0.x;
	float n_out16p1 = n_out17p0.y;
	float n_out16p2 = n_out17p0.z;

// VectorCompose:15
	float n_in15p0 = 0.00000;
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_in15p0, n_out16p2, n_in15p2);

// VectorCompose:18
	float n_in18p0 = 0.00000;
	float n_in18p1 = 0.00000;
	float n_in18p2 = 0.00000;
	vec3 n_out18p0 = vec3(n_in18p0, n_in18p1, n_in18p2);

// Output:0
	ALBEDO = n_out15p0;
	TRANSMISSION = n_out18p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -752.083, -123.32 )
nodes/fragment/0/position = Vector2( 1120, -120 )
nodes/fragment/2/node = SubResource( 15 )
nodes/fragment/2/position = Vector2( 540, 0 )
nodes/fragment/3/node = SubResource( 17 )
nodes/fragment/3/position = Vector2( -460, -80 )
nodes/fragment/5/node = SubResource( 18 )
nodes/fragment/5/position = Vector2( -120, -80 )
nodes/fragment/7/node = SubResource( 19 )
nodes/fragment/7/position = Vector2( -700, -40 )
nodes/fragment/8/node = SubResource( 20 )
nodes/fragment/8/position = Vector2( -160, 120 )
nodes/fragment/9/node = SubResource( 21 )
nodes/fragment/9/position = Vector2( -720, 120 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 160, -240 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 400, -140 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( -520, 140 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( -580, 300 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( -360, 220 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 840, -160 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( 640, -140 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( 720, 20 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( 700, 180 )
nodes/fragment/19/node = SubResource( 14 )
nodes/fragment/19/position = Vector2( 140, 180 )
nodes/fragment/20/node = SubResource( 16 )
nodes/fragment/20/position = Vector2( -420, 20 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 9, 0, 12, 0, 9, 0, 13, 0, 8, 0, 5, 1, 13, 0, 14, 0, 10, 0, 11, 0, 16, 2, 15, 1, 15, 0, 0, 0, 17, 0, 16, 0, 2, 0, 17, 0, 11, 0, 2, 0, 18, 0, 0, 17, 19, 0, 11, 1, 7, 0, 20, 0, 20, 0, 8, 1, 5, 0, 10, 0 )
